apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uidam-user-management.fullname" . }}
  labels: {{- include "uidam-user-management.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "uidam-user-management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if and .Values.multiTenant (contains "ecsp" .Values.multiTenant.tenantIds) }}
        checksum/config-ecsp: {{ include (print $.Template.BasePath "/configmap-tenant-ecsp.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.multiTenant (contains "sdp" .Values.multiTenant.tenantIds) }}
        checksum/config-sdp: {{ include (print $.Template.BasePath "/configmap-tenant-sdp.yaml") . | sha256sum }}
        {{- end }}
      labels: {{- include "uidam-user-management.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "uidam-user-management.fullname" . }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext: {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "uidam-user-management.fullname" . }}
        {{- if and .Values.multiTenant (contains "ecsp" .Values.multiTenant.tenantIds) }}
        - configMapRef:
            name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp
        {{- end }}
        {{- if and .Values.multiTenant (contains "sdp" .Values.multiTenant.tenantIds) }}
        - configMapRef:
            name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /notification
          name: {{ .Values.notification.config.configName }}
        env:
          - name: LOGLEVEL
            value: DEBUG
          - name: POSTGRESQL_CONFIG_FILE
            value: /data/uidam-user-management-postgres-config.yml
          - name: POSTGRESQL_HOST
            value: "{{ .Values.postgresql.host }}"
          - name: POSTGRESQL_PORT
            value: "{{ .Values.postgresql.port }}"
          # Global secrets from main secret
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: password
          - name: CLIENT_REGISTRATION_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: clientsecretkey
          - name: CLIENT_REGISTRATION_SECRET_SALT
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: clientsecretsalt   
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: revokeTokenClientSecret
          - name: INTITIAL_DATA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: liquibase_clientsecret
          - name: INTITIAL_DATA_USER_SALT
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: liquibase_usersalt
          - name: INTITIAL_DATA_USER_PWD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgresql.secretName }}"
                key: liquibase_userpwd

          # ECSP tenant secrets
          {{- if and .Values.multiTenant (contains "ecsp" .Values.multiTenant.tenantIds) }}
          - name: ECSP_POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: username
          - name: ECSP_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: password
          - name: ECSP_CLIENT_REGISTRATION_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: clientsecretkey
          - name: ECSP_CLIENT_REGISTRATION_SECRET_SALT
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: clientsecretsalt
          - name: ECSP_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: revokeTokenClientSecret
          - name: ECSP_INTITIAL_DATA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: liquibase_clientsecret
          - name: ECSP_INTITIAL_DATA_USER_SALT
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: liquibase_usersalt
          - name: ECSP_INTITIAL_DATA_USER_PWD
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-ecsp-credentials
                key: liquibase_userpwd
          {{- end }}

          # SDP tenant secrets
          {{- if and .Values.multiTenant (contains "sdp" .Values.multiTenant.tenantIds) }}
          - name: SDP_POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: username
          - name: SDP_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: password
          - name: SDP_CLIENT_REGISTRATION_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: clientsecretkey
          - name: SDP_CLIENT_REGISTRATION_SECRET_SALT
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: clientsecretsalt
          - name: SDP_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: revokeTokenClientSecret
          - name: SDP_INTITIAL_DATA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: liquibase_clientsecret
          - name: SDP_INTITIAL_DATA_USER_SALT
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: liquibase_usersalt
          - name: SDP_INTITIAL_DATA_USER_PWD
            valueFrom:
              secretKeyRef:
                name: {{ include "uidam-user-management.fullname" . }}-tenant-sdp-credentials
                key: liquibase_userpwd
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ .Values.notification.config.configName }}
          configMap:
            name: uidam-user-management-notification-config
            optional: true
